
srcdir = @srcdir@/src
srcbin = $(srcdir)/progs
srclib = $(srcdir)/lib
srcinc = $(srcdir)/include
srcexm = $(srcdir)/examples

config = ./src/include/nanosoft/config.h

CPPFLAGS = @CPPFLAGS@ -I$(srcinc) -I./src/include
LDFLAGS = @LDFLAGS@ -L.
CFLAGS = @CFLAGS@ $(CPPFLAGS) -L.
CXXFLAGS = @CXXFLAGS@ $(CPPFLAGS)  -L.
LIBS = @LIBS@
CXX = @CXX@ $(CXXFLAGS)
CC = @CC@ $(CFLAGS)
AR = @AR@
RANLIB = @RANLIB@
INSTALL = @INSTALL@
MKDIR = @MKDIR@

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
libdir = @libdir@
includedir = @includedir@

PREFIX = $(DESTDIR)$(prefix)
EPREFIX = $(DESTDIR)$(exec_prefix)
BINDIR = $(DESTDIR)$(bindir)
INCLUDEDIR = $(DESTDIR)$(includedir)
LIBDIR = $(DESTDIR)$(libdir)

INSTALL_BIN = $(INSTALL) -m755
INSTALL_INC = $(INSTALL) -m644
INSTALL_LIB = $(INSTALL) -m644

BUILD = @build@
HOST = @host@
HOST_OS = @host_os@

NETWORK_LIBS = @NETWORK_LIBS@

NANOSOFT_OBJECTS=nanoini.o
NANOSOFT_OBJECTS+=nanostr.o
NANOSOFT_OBJECTS+=nanourl.o
NANOSOFT_OBJECTS+=nanoini.o
NANOSOFT_OBJECTS+=string.o
NANOSOFT_OBJECTS+=options.o
NANOSOFT_OBJECTS+=fstream.o
NANOSOFT_OBJECTS+=socket.o
NANOSOFT_OBJECTS+=http.o
NANOSOFT_OBJECTS+=xmlwriter.o
NANOSOFT_OBJECTS+=base64.o
NANOSOFT_OBJECTS+=error.o

LIBNETD_OBJECTS=netdaemon.o
LIBNETD_OBJECTS+=asyncobject.o
LIBNETD_OBJECTS+=asyncstream.o
LIBNETD_OBJECTS+=asyncserver.o
LIBNETD_OBJECTS+=asyncxmlstream.o
LIBNETD_OBJECTS+=saslserver.o
#LIBNETD_OBJECTS+=cyrussaslserver.o
LIBNETD_OBJECTS+=gsaslserver.o


all: all-$(HOST_OS)
	date "+%d.%m.%Y %H:%M:%S" > build

.PHONY: install install-linux install-mingw32 install-headers
install: install-$(HOST_OS) install-headers

install-headers:
	$(INSTALL_INC) $(srcdir)/include/nanoini.h $(INCLUDEDIR)/nanoini.h
	$(INSTALL_INC) $(srcdir)/include/nanostr.h $(INCLUDEDIR)/nanostr.h
	$(INSTALL_INC) $(srcdir)/include/nanourl.h $(INCLUDEDIR)/nanourl.h
	$(INSTALL_INC) $(srcdir)/include/nanosoft/config.h $(INCLUDEDIR)/nanosoft/config.h
	$(INSTALL_INC) $(srcdir)/include/nanosoft/fstream.h $(INCLUDEDIR)/nanosoft/fstream.h
	$(INSTALL_INC) $(srcdir)/include/nanosoft/http.h $(INCLUDEDIR)/nanosoft/http.h
	$(INSTALL_INC) $(srcdir)/include/nanosoft/options.h $(INCLUDEDIR)/nanosoft/options.h
	$(INSTALL_INC) $(srcdir)/include/nanosoft/socket.h $(INCLUDEDIR)/nanosoft/socket.h
	$(INSTALL_INC) $(srcdir)/include/nanosoft/stream.h $(INCLUDEDIR)/nanosoft/stream.h
	$(INSTALL_INC) $(srcdir)/include/nanosoft/string.h $(INCLUDEDIR)/nanosoft/string.h
	$(INSTALL_INC) $(srcdir)/include/nanosoft/xmlwriter.h $(INCLUDEDIR)/nanosoft/xmlwriter.h
	$(INSTALL_INC) $(srcdir)/include/nanosoft/base64.h $(INCLUDEDIR)/nanosoft/base64.h
	$(INSTALL_INC) $(srcdir)/include/nanosoft/error.h $(INCLUDEDIR)/nanosoft/error.h
	$(INSTALL_INC) $(srcdir)/include/nanosoft/asyncobject.h $(INCLUDEDIR)/nanosoft/asyncobject.h
	$(INSTALL_INC) $(srcdir)/include/nanosoft/asyncstream.h $(INCLUDEDIR)/nanosoft/asyncstream.h
	$(INSTALL_INC) $(srcdir)/include/nanosoft/asyncxmlstream.h $(INCLUDEDIR)/nanosoft/asyncxmlstream.h
	$(INSTALL_INC) $(srcdir)/include/nanosoft/asyncserver.h $(INCLUDEDIR)/nanosoft/asyncserver.h
	$(INSTALL_INC) $(srcdir)/include/nanosoft/netdaemon.h $(INCLUDEDIR)/nanosoft/netdaemon.h
	$(INSTALL_INC) $(srcdir)/include/nanosoft/saslserver.h $(INCLUDEDIR)/nanosoft/saslserver.h
	$(INSTALL_INC) $(srcdir)/include/nanosoft/gsaslserver.h $(INCLUDEDIR)/nanosoft/gsaslserver.h


install-linux: forker miniget wait time masterd nsu miniget2 showpath libnanosoft.a
	$(MKDIR) -p $(BINDIR) $(LIBDIR) $(INCLUDEDIR)/nanosoft
	$(INSTALL_BIN) forker $(BINDIR)/forker
	$(INSTALL_BIN) miniget $(BINDIR)/miniget
	$(INSTALL_BIN) wait $(BINDIR)/wait
	$(INSTALL_BIN) time $(BINDIR)/time
	$(INSTALL_BIN) masterd $(BINDIR)/masterd
	$(INSTALL_BIN) nsu $(BINDIR)/nsu
	$(INSTALL_BIN) miniget2 $(BINDIR)/miniget2
	$(INSTALL_BIN) showpath $(BINDIR)/showpath
	$(INSTALL_LIB) libnanosoft.a $(LIBDIR)/libnanosoft.a
	$(INSTALL_LIB) libnetd.a $(LIBDIR)/libnetd.a

install-mingw32: libnanosoft.a miniget2
	$(INSTALL_BIN) miniget2 $(BINDIR)/miniget2
	$(INSTALL_LIB) libnanosoft.a $(LIBDIR)/libnanosoft.a

all-mingw32: libnanosoft.a miniget2 parse_url streams options string
	echo > all-mingw32

all-linux: forker miniget wait time parse_url masterd nsu streams miniget2 minisend showpath options string daemon libnanosoft.a libnetd.a
	echo > all-linux

# PROGRAMS

forker: $(srcbin)/forker.c
	$(CC) $(srcbin)/forker.c -o forker

wait: $(srcbin)/wait.c
	$(CC) $(srcbin)/wait.c -o wait

time: $(srcbin)/time.c
	$(CC) $(srcbin)/time.c -o time

nsu: $(srcbin)/nsu.c
	$(CC) $(srcbin)/nsu.c -o nsu

masterd: $(srcbin)/masterd.c libnanosoft.a
	$(CC) $(srcbin)/masterd.c -lnanosoft -o masterd

miniget: $(srcbin)/miniget.c libnanosoft.a
	$(CC) $(srcbin)/miniget.c -lnanosoft -o miniget

miniget2: $(srcbin)/miniget.cpp libnanosoft.a
	$(CXX) $(srcbin)/miniget.cpp -lnanosoft -lstdc++ $(NETWORK_LIBS) -o miniget2

minisend: $(srcbin)/minisend.cpp libnanosoft.a
	$(CXX) $(srcbin)/minisend.cpp -lnanosoft -lstdc++ $(NETWORK_LIBS) -o minisend

showpath: $(srcbin)/showpath.c
	$(CXX) $(srcbin)/showpath.c -o showpath

# EXAMPLES

parse_url: $(srcexm)/parse_url.c libnanosoft.a
	$(CC) $(srcexm)/parse_url.c -lnanosoft -o parse_url

streams: $(srcexm)/streams.cpp libnanosoft.a
	$(CXX) $(srcexm)/streams.cpp -lnanosoft -lstdc++ -o streams

options: $(srcexm)/options.cpp  libnanosoft.a
	$(CXX) $(srcexm)/options.cpp -lnanosoft -lstdc++ -o options

string: $(srcexm)/string.cpp libnanosoft.a
	$(CXX) $(srcexm)/string.cpp -lnanosoft -lstdc++ -o string

# LIBRARY

libnanosoft.a: $(NANOSOFT_OBJECTS)
	$(AR) rc libnanosoft.a $(NANOSOFT_OBJECTS)
	$(RANLIB) libnanosoft.a

# MODULES

nanoini.o: $(srclib)/nanoini.c $(srcinc)/nanoini.h
	$(CC) -c $(srclib)/nanoini.c

nanostr.o: $(srclib)/nanostr.c $(srcinc)/nanostr.h
	$(CC) -c $(srclib)/nanostr.c

nanourl.o: $(srclib)/nanourl.c $(srcinc)/nanourl.h
	$(CC) -c $(srclib)/nanourl.c

string.o: $(srclib)/string.cpp $(srcinc)/nanosoft/string.h
	$(CXX) -c $(srclib)/string.cpp

options.o: $(srclib)/options.cpp $(srcinc)/nanosoft/options.h
	$(CXX) -c $(srclib)/options.cpp

fstream.o: $(srclib)/fstream.cpp $(srcinc)/nanosoft/stream.h $(srcinc)/nanosoft/fstream.h
	$(CXX) -c $(srclib)/fstream.cpp

socket.o: $(srclib)/socket.cpp $(srcinc)/nanosoft/stream.h $(srcinc)/nanosoft/socket.h $(config)
	$(CXX) -c $(srclib)/socket.cpp

http.o: $(srclib)/http.cpp $(srcinc)/nanosoft/stream.h $(srcinc)/nanosoft/socket.h $(srcinc)/nanosoft/http.h $(srcinc)/nanourl.h
	$(CXX) -c $(srclib)/http.cpp

xmlwriter.o: $(srclib)/xmlwriter.cpp $(srcinc)/nanosoft/xmlwriter.h
	$(CXX) -c $(srclib)/xmlwriter.cpp

base64.o: $(srclib)/base64.cpp $(srcinc)/nanosoft/base64.h
	$(CXX) -c $(srclib)/base64.cpp

error.o: $(srclib)/error.cpp $(srcinc)/nanosoft/error.h
	$(CXX) -c $(srclib)/error.cpp

# libnetd modules
daemon: $(srcexm)/daemon.cpp libnetd.a libnanosoft.a
	$(CXX) $(srcexm)/daemon.cpp -o daemon -lpthread -lnetd -lnanosoft -lexpat

libnetd.a: $(LIBNETD_OBJECTS)
	$(AR) rc libnetd.a $(LIBNETD_OBJECTS)
	$(RANLIB) libnetd.a

netdaemon.o: $(srcdir)/libnetd/netdaemon.cpp $(srcinc)/nanosoft/netdaemon.h
	$(CXX) -c $(srcdir)/libnetd/netdaemon.cpp

asyncxmlstream.o: $(srcdir)/libnetd/asyncxmlstream.cpp $(srcinc)/nanosoft/asyncxmlstream.h $(srcinc)/nanosoft/asyncstream.h $(srcinc)/nanosoft/asyncobject.h $(srcinc)/nanosoft/xmlwriter.h
	$(CXX) -c $(srcdir)/libnetd/asyncxmlstream.cpp
	
asyncstream.o: $(srcdir)/libnetd/asyncstream.cpp $(srcinc)/nanosoft/asyncstream.h $(srcinc)/nanosoft/asyncobject.h
	$(CXX) -c $(srcdir)/libnetd/asyncstream.cpp

asyncserver.o: $(srcdir)/libnetd/asyncserver.cpp $(srcinc)/nanosoft/asyncserver.h $(srcinc)/nanosoft/asyncobject.h
	$(CXX) -c $(srcdir)/libnetd/asyncserver.cpp

asyncobject.o: $(srcdir)/libnetd/asyncobject.cpp $(srcinc)/nanosoft/asyncobject.h
	$(CXX) -c $(srcdir)/libnetd/asyncobject.cpp

cyrussaslserver.o: $(srcdir)/libnetd/cyrussaslserver.cpp $(srcinc)/nanosoft/cyrussaslserver.h $(srcinc)/nanosoft/saslserver.h
	$(CXX) -c $(srcdir)/libnetd/cyrussaslserver.cpp

gsaslserver.o: $(srcdir)/libnetd/gsaslserver.cpp $(srcinc)/nanosoft/gsaslserver.h $(srcinc)/nanosoft/saslserver.h
	$(CXX) -c $(srcdir)/libnetd/gsaslserver.cpp

saslserver.o: $(srcdir)/libnetd/saslserver.cpp $(srcinc)/nanosoft/saslserver.h
	$(CXX) -c $(srcdir)/libnetd/saslserver.cpp

# CLEAN

.PHONY: clean distclean

distclean: clean
	rm -f Makefile *.log  $(config) config.status

clean:
	rm -f *.o build all-linux all-mingw32
	rm -f forker miniget wait time parse_url masterd nsu streams miniget2 showpath libnanosoft.a libnetd.a options string daemon minisend
